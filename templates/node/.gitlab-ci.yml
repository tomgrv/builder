# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: tomgrv/ci-builder:latest

before_script:
  - npm -g set git-tag-version false
  - gv /config $(pwd)/.gitversion.yml > .version.json
  - npx convert-json-env .version.json --out .version.env --prefix="export GitVersion_"
  - . ./.version.env
  - echo ${GitVersion_InformationalVersion}

stages:
  - build
  - test
  - deploy

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - dist/
    - package*.json

# Install Dependencies
node:
  stage: build
  only:
    - branches
  script:
    - npm install
    - npm install release-it --no-save
    - npx env-inject-file --in package.json --out package.json
    - npm run prod
  artifacts:
    paths:
      - package*.json
      - dist/

# Test
test:
  stage: test
  only:
    - branches
  script:
    - npm run test

# Lint
lint:
  stage: test
  only:
    - branches
  script:
    - npm run lint

# Dependencies
check:
  stage: test
  only:
    - branches
  script:
    - npm install npm-check --no-save
    - npx npm-check -p

# Release tagged versions to Gitlab/Github
release-production:
  stage: deploy
  only:
    refs:
      - master
    variables:
      - $GITLAB_TOKEN
      - $GITHUB_TOKEN
  script:
    - npx release-it ${GitVersion_SemVer} ${GITLAB_TOKEN:+--gitlab.release} ${GITHUB_TOKEN:+--github.release} --no-npm --ci --no-git

# Release tagged versions to Gitlab/Github
release-staging:
  stage: deploy
  only:
    refs:
      - /^release/.*$/
    variables:
      - $GITLAB_TOKEN
      - $GITHUB_TOKEN
  script:
    - npx release-it ${GitVersion_SemVer} ${GITLAB_TOKEN:+--gitlab.prerelease} ${GITHUB_TOKEN:+--github.prerelease} --no-npm --ci --no-git

# Publish tagged versions to npm
publish-production:
  stage: deploy
  only:
    refs:
      - master
    variables:
      - $NPM_TOKEN
  script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
    - npx release-it ${GitVersion_SemVer} --ci --no-git

# Publish tagged versions to npm
publish-staging:
  stage: deploy
  only:
    refs:
      - /^release/.*$/
    variables:
      - $NPM_TOKEN
  script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
    - npx release-it ${GitVersion_SemVer} --npm.tag=${GitVersion_PreReleaseLabel} --ci --no-git
