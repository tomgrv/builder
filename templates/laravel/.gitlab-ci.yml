# @format

image: tomgrv/ci-builder:stable

.init_ssh: &init_ssh
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - if test -f /.dockerenv; then echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config; fi

.change_file_permissions: &change_file_permissions
    - find . -type f -not -path "./vendor/*" -exec chmod 664 {} \;
    - find . -type d -not -path "./vendor/*" -exec chmod 775 {} \;

.artisan_init: &artisan_init
    - if test -f .env.build; then cp .env.build .env; else echo -e "APP_KEY=\nDB_CONNECTION=sqlite\nDB_DATABASE=storage/app/db" > .env; fi
    - touch $(awk 'BEGIN { FS = "=" } /DB_DATABASE/ { print $2; }' .env)
    - php artisan key:generate

.artisan_deploy: &artisan_deploy
    - php artisan deploy --no-interaction --branch=${CI_COMMIT_REF_NAME} ${CI_ENVIRONMENT_SLUG} -vv

.composer_clean: &composer_clean
    - COMPOSER_MEMORY_LIMIT=-1 composer install --prefer-dist --no-interaction --no-progress --no-suggest --no-dev

.gitversion: &gitversion
    - dotnet-gitversion /diag /nocache
    - if test -f .gitversion.yml; then dotnet-gitversion /nocache /config .gitversion.yml; else dotnet-gitversion /nocache; fi > .version.json
    - npx convert-json-env .version.json --out .version.env --prefix="export GitVersion_"
    - source .version.env
    - echo ${GitVersion_InformationalVersion}

before_script:
    - npm -g set git-tag-version false
    - *gitversion

stages:
    - build
    - test
    - deploy

composer:
    stage: build
    cache:
        key: ${CI_COMMIT_REF_SLUG}-composer
        paths:
            - vendor/
    script:
        - *init_ssh
        - COMPOSER_MEMORY_LIMIT=-1 composer install --prefer-dist --no-interaction --no-progress --no-suggest

    artifacts:
        expire_in: 1 month
        paths:
            - vendor/

node:
    stage: build
    cache:
        key: ${CI_COMMIT_REF_SLUG}-node
        paths:
            - node_modules/
    script:
        - *init_ssh
        - PATH=node_modules/.bin:$PATH
        - npm install
        - npm run production
    artifacts:
        expire_in: 1 month
        paths:
            - node_modules/
            - public/

codestyle:
    stage: lint
    script:
        - COMPOSER_MEMORY_LIMIT=-1 composer lint-check .
        - npx prettier --ignore-path ./.gitignore --require-pragma --check .

phpunit:
    stage: test
    script:
        - *artisan_init
        - phpunit --coverage-text

beta:
    stage: deploy
    script:
        - *init_ssh
        - *change_file_permissions
        - *artisan_init
        - *artisan_deploy
    environment:
        name: beta
    only:
        - develop

staging:
    stage: deploy
    script:
        - *init_ssh
        - *change_file_permissions
        - *composer_clean
        - *artisan_init
        - *artisan_deploy
    environment:
        name: staging
    only:
        - release

production:
    stage: deploy
    script:
        - *init_ssh
        - *change_file_permissions
        - *composer_clean
        - *artisan_init
        - *artisan_deploy
    environment:
        name: production
    only:
        - master
