image: tomgrv/ci-builder:latest

.init_ssh_deploy: &init_ssh_deploy |
  eval $(ssh-agent -s)
  echo "${SSH_PRIVATE_KEY_DEPLOY}" | tr -d '\r' | ssh-add - > /dev/null
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

.init_ssh_build: &init_ssh_build |
  eval $(ssh-agent -s)
  echo "${SSH_PRIVATE_KEY_BUILD}" | tr -d '\r' | ssh-add - > /dev/null
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

.change_file_permissions: &change_file_permissions |
  find . -type f -not -path "./vendor/*" -exec chmod 664 {} \;
  find . -type d -not -path "./vendor/*" -exec chmod 775 {} \;

composer:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer
    paths:
    - vendor/
  script:
  - *init_ssh_build
  - composer require --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts --dev lorisleiva/laravel-deployer:dev-master
  - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
  - cp .env.example .env
  - php artisan key:generate
  artifacts:
    expire_in: 1 month
    paths:
    - vendor/
    - .env

node:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-node
    paths:
    - node_modules/
  script:
  - *init_ssh_build
  - PATH=node_modules/.bin:$PATH
  - ${NODE_MODULE_MANAGER:-npm} install
  - ${NODE_MODULE_MANAGER:-npm} run production
  artifacts:
    expire_in: 1 month
    paths:
    - node_modules/
    - public/css/
    - public/js/

codestyle:
  stage: test
  dependencies: []
  script:
  - phpcs --standard=PSR2 --extensions=php --ignore=app/Support/helpers.php app

phpunit:
  stage: test
  dependencies:
  - composer
  script:
  - phpunit --coverage-text --colors=never

beta:
  stage: deploy
  variables:
    SSH_PRIVATE_KEY_DEPLOY: ${SSH_PRIVATE_KEY_DEPLOY_BETA}
  script:
  - *init_ssh_deploy
  - *change_file_permissions
  - php artisan deploy --roles beta -s upload
  environment:
    name: beta
    url: http://${HOSTNAME_BETA_SERVER}

staging:
  stage: deploy
  variables:
    SSH_PRIVATE_KEY_DEPLOY: ${SSH_PRIVATE_KEY_DEPLOY_STATING}
  script:
  - *init_ssh_deploy
  - *change_file_permissions
  - php artisan deploy --roles staging -s upload
  environment:
    name: staging
    url: http://${HOSTNAME_STAGING_SERVER}
  only:
  - master

production:
  stage: deploy
  variables:
    SSH_PRIVATE_KEY_DEPLOY: ${SSH_PRIVATE_KEY_DEPLOY_PRODUCTION}
  script:
  - *init_ssh_deploy
  - *change_file_permissions
  - php artisan deploy --roles production -s upload
  environment:
    name: production
    url: http://${HOSTNAME_PRODUCTION_SERVER}
  when: manual
  only:
  - master